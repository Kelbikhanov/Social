{"version":3,"sources":["assets/images/user.png","redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/preloader.svg","components/common/Preloader/Preloader.module.css","assets/images/logo.png","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","components/common/Preloader/Preloader.js","utils/validators/validators.js","api/api.js","redux/profile-reducer.js"],"names":["module","exports","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","Navbar","s","block_navbar","nav","item","to","activeClassName","activeLink","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","fake","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","btn_pagination","onClick","p","span","selectedPage","pageNumber","key","e","User","user","unfollow","follow","flex_user","flex1","src","photos","small","userPhoto","disabled","some","flex2","status","hr_div","Users","people","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","usersAPI","bind","page","totalCount","Header","header","href","Logo","loginBlock","isAuth","flex_logout","p_logout","login","header_logout","logout","log","SET_USER_DATA","email","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","authAPI","me","response","getCaptchaUrl","securityAPI","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","style","form_login","onSubmit","required","formSummaryError","p_btn","btn_login","password","rememberMe","captcha","length","stopSubmit","_error","login_triangle","login_header","formData","initialized","globalError","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","reason","promise","alert","initializeApp","addEventListener","removeEventListener","exact","path","render","AppContainer","withRouter","Promise","all","then","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preloader","value","maxLengthCreator","maxLength","instance","axios","withCredentials","baseURL","headers","get","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","put","savePhoto","photoFile","FormData","append","saveProfile","profile","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","postId"],"mappings":"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","file":"static/js/main.afe35305.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.d03d2e47.png\";","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3CIee\",\"follow\":\"users_follow__3A_Tg\",\"unfollow\":\"users_unfollow__XYZ_S\",\"user\":\"users_user__3yBdk\",\"flex_user\":\"users_flex_user__2s3eb\",\"hr_div\":\"users_hr_div__3xGez\",\"users\":\"users_users__7e6lG\",\"people\":\"users_people__2lnlv\",\"flex2\":\"users_flex2__1llI6\",\"name\":\"users_name__2W4dT\",\"status\":\"users_status__26Z0B\",\"location\":\"users_location__2Epm1\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.8cac8f62.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__bpelo\"};","module.exports = __webpack_public_path__ + \"static/media/logo.d5b78940.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block_navbar\":\"Navbar_block_navbar__3zSMR\",\"nav\":\"Navbar_nav__2PPEy\",\"item\":\"Navbar_item__KePkq\",\"activeLink\":\"Navbar_activeLink__22IQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1cPNt\",\"error\":\"FormsControls_error__1b9Xy\",\"formSummaryError\":\"FormsControls_formSummaryError__3NL9R\",\"login\":\"FormsControls_login__2Kytd\",\"login_header\":\"FormsControls_login_header__1SPx8\",\"login_triangle\":\"FormsControls_login_triangle__2S5bD\",\"btn_login\":\"FormsControls_btn_login__1Pveo\",\"form_login\":\"FormsControls_form_login__1h54A\"};","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><p><input className={styles.input} {...input} {...restProps} /></p></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.block_navbar}>\r\n            <nav className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <a>News</a>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>Music</a>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <a>Settings</a>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [],\n    fake: 10\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default usersReducer;","import React, {useState} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={cn(styles.paginator)}>\n        { portionNumber > 1 &&\n        <button className={styles.btn_pagination} onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <div className={styles.span}>\n                    <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                                 key={p}\n                                 onClick={(e) => {\n                                     onPageChanged(p);\n                                 }}>{p}</span>\n                </div>\n            })}\n        { portionCount > portionNumber &&\n            <button className={styles.btn_pagination} onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n}\n\nexport default Paginator;","import React from 'react';\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport {NavLink} from \"react-router-dom\";\nimport Paginator from \"../common/Paginator/Paginator\";\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n        <div className={styles.user}>\n            <div className={styles.flex_user}>\n                <div className={styles.flex1}>\n                <span>\n                    <div>\n                       <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                             className={styles.userPhoto}/>\n                       </NavLink>\n                    </div>\n                    <div>\n                        {user.followed\n                            ? <button className={styles.unfollow} disabled={followingInProgress\n                                .some(id => id === user.id)}\n                                      onClick={() => {\n                                          unfollow(user.id)\n                                      }}>\n                                Unfollow</button>\n                            :\n                            <button className={styles.follow} disabled={followingInProgress.some(id => id === user.id)}\n                                    onClick={() => {\n                                        follow(user.id)\n                                    }}>\n                                Follow</button>}\n\n                    </div>\n                </span>\n                </div>\n                <div className={styles.flex2}>\n                <div>\n                    <span>\n                        <div className={styles.name}>{user.name}</div>\n                        <div className={styles.status}>{user.status}</div>\n                    </span>\n                    <span>\n                        <div className={styles.location}>{\"user.location.country\"}</div>\n                        <div className={styles.location}>{\"user.location.city\"}</div>\n                    </span>\n                </div>\n                </div>\n            </div>\n            <div className={styles.hr_div}>\n                <hr/>\n            </div>\n        </div>\n    )\n}\n\nexport default User;","import React from 'react';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport styles from \"./users.module.css\";\nimport User from \"./User\";\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n    return <div className={styles.users}>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n        <div className={styles.people}>\n            {\n                users.map(u => <User user={u}\n                                     followingInProgress={props.followingInProgress}\n                                     key={u.id}\n                                     unfollow={props.unfollow}\n                                     follow={props.follow}\n                    />\n                )\n            }\n        </div>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n    </div>\n}\n\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    follow,\n    setCurrentPage,\n    unfollow, toggleFollowingProgress, requestUsers\n} from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers\n} from \"../../redux/users-selectors\";\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Logo from \"../../assets/images/logo.png\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n\r\n        <a href={\"/Profile\"}><img src={Logo}/></a>\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div className={s.flex_logout}>\r\n                    <div >\r\n                        <p className={s.p_logout}>{props.login}</p>\r\n                    </div>\r\n                   <div className={s.header_logout}>\r\n                       <button className=\"btn btn-primary\" onClick={props.logout}>Log out</button>\r\n                   </div>\r\n                  </div>\r\n                :  <NavLink to={'/login'}><p className={s.log}>Login</p></NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null // if null, then captcha is not required\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth}\n});\n\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\n});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe, captcha);\n    if (response.data.resultCode === 0) {\n        // success, get auth data\n        dispatch(getAuthUserData())\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl());\n        }\n\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n}\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n    const response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\n}\n\n\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n\n\n    render() {\n        return <Header {...this.props} />\n    }\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form className={style.form_login} onSubmit={handleSubmit}>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"})}\n\n            { captchaUrl && <img src={captchaUrl} />}\n            { captchaUrl &&  createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\n\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div><p>remember me</p></div>\n            <div>\n                <p className={style.p_btn}><button className={style.btn_login}>Login</button></p>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return <div className={style.login}>\n        <div className={style.login_triangle}></div>\n        <h1 className={style.login_header}>SIGN IN</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false,\n    globalError: null\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    //dispatch(somethingelse());\n    //dispatch(somethingelse());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <React.Suspense fallback={<div>loading...</div>} >\n            <Component {...props} />\n        </React.Suspense>\n    };\n}","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends Component {\n    catchAllUnhandledErrors = (reason, promise) => {\n        alert(\"Some error occured\");\n        //console.error(promiseRejectionEvent);\n    }\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        <Route exact path='/'\n                               render={() => <Redirect to={\"/profile\"}/>}/>\n\n                        <Route path='/dialogs'\n                               render={withSuspense(DialogsContainer)}/>\n\n                        <Route path='/profile/:userId?'\n                               render={withSuspense(ProfileContainer)}/>\n\n                        <Route path='/users'\n                               render={() => <UsersContainer/>}/>\n\n                        <Route path='/login'\n                               render={() => <LoginPage/>}/>\n\n                        <Route path='*'\n                               render={() => <div>404 NOT FOUND</div>}/>\n                    </Switch>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default SamuraiJSApp;\n","import * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1wkyD\",\"pageNumber\":\"Paginator_pageNumber__3ZEQp\",\"selectedPage\":\"Paginator_selectedPage__s8dQQ\",\"span\":\"Paginator_span__3Oc4A\",\"btn_pagination\":\"Paginator_btn_pagination__Eo7an\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2OXtu\",\"loginBlock\":\"Header_loginBlock__CDsn6\",\"flex_logout\":\"Header_flex_logout__1MFSn\",\"p_logout\":\"Header_p_logout__2ijSb\",\"header_logout\":\"Header_header_logout__bMbts\",\"log\":\"Header_log__2uf45\"};","import React from 'react';\nimport preloader from \"../../../assets/images/preloader.svg\";\nimport styles from \"./Preloader.module.css\"\n\n\nlet Preloader = (props) => {\n    return <div className={styles.preloader}>\n        <img src={preloader} />\n    </div>\n}\n\nexport default Preloader;","export const required = value => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers:     {\n        \"API-KEY\": \"fd66f373-421c-4ca6-8935-44249ad31346\"\n    }\n});\n\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method. Please profileAPI object.')\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        });\n    },\n    saveProfile(profile) {\n        return instance.put(`profile`, profile );\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`);\n    }\n}\n\n\n","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            debugger;\r\n            return {...state, profile: {...state.profile, photos: action.photos }}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch(error) {\r\n        //\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}